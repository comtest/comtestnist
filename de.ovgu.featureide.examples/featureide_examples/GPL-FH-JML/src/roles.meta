{
	"features" : [
		"UndirectedWithEdges",
		"TestProg",
		"Number",
		"Connected",
		"Cycle",
		"MSTKruskal",
		"DFS",
		"WeightedWithEdges",
		"Base",
		"WithEdges",
		"Base"
	],
	"roles": {
		"enterElevator": {
			"Base": "enterElevator__wrappee__Base",
			"Weight": "enterElevator"
		},
		"leaveElevator": {
			"Base": "leaveElevator__wrappee__Base",
			"Weight": "leaveElevator__wrappee__Weight",
			"Empty": "leaveElevator"
		},
		"testFinished": {
			"Weight": "testFinished__wrappee__Weight",
			"Empty": "testFinished"
		},
		"test": {
			"Weight": "test__wrappee__Weight",
			"Empty": "test"
		},
		"pressInLiftFloorButton": {
			"Weight": "pressInLiftFloorButton__wrappee__Weight",
			"Empty": "pressInLiftFloorButton"
		},
		"timeShift": {
			"Weight": "timeShift__wrappee__Weight",
			"Empty": "timeShift__wrappee__Empty",
			"ExecutiveFloor": "timeShift__wrappee__TwoThirdsFull",
			"TwoThirdsFull": "timeShift__wrappee__TwoThirdsFull",
			"Overloaded": "timeShift"
		},
		"getFloor": {
			"Empty": "getFloor"
		},
		"getFloors": {
			"Empty": "getFloors"
		},
		"isTopFloor": {
			"Empty": "isTopFloor"
		},
		"stopRequestedAtCurrentFloor": {
			"Empty": "stopRequestedAtCurrentFloor__wrappee__Empty",
			"ExecutiveFloor": "stopRequestedAtCurrentFloor__wrappee__ExecutiveFloor",
			"TwoThirdsFull": "stopRequestedAtCurrentFloor"
		},
		"stopRequestedInDirection": {
			"Empty": "stopRequestedInDirection__wrappee__Empty",
			"ExecutiveFloor": "stopRequestedInDirection__wrappee__ExecutiveFloor",
			"TwoThirdsFull": "stopRequestedInDirection"
		},
		"continueInDirection": {
			"ExecutiveFloor": "continueInDirection__wrappee__ExecutiveFloor",
			"TwoThirdsFull": "continueInDirection"
		},
		"isBlocked": {
			"Overloaded": "isBlocked"
		},
		"incoming": {
			"Keys": "incoming__wrappee__Keys",
			"Encrypt": "incoming__wrappee__Encrypt",
			"AutoResponder": "incoming__wrappee__Sign",
			"Sign": "incoming__wrappee__Sign",
			"Forward": "incoming__wrappee__Forward",
			"Verify": "incoming__wrappee__Verify",
			"Decrypt": "incoming"
		},
		"mail": {
			"Keys": "mail__wrappee__Keys",
			"Encrypt": "mail__wrappee__Addressbook",
			"Addressbook": "mail__wrappee__Addressbook",
			"Sign": "mail__wrappee__Forward",
			"Forward": "mail__wrappee__Forward",
			"Verify": "mail"
		},
		"outgoing": {
			"Keys": "outgoing__wrappee__Keys",
			"Encrypt": "outgoing__wrappee__AutoResponder",
			"AutoResponder": "outgoing__wrappee__AutoResponder",
			"Addressbook": "outgoing__wrappee__Addressbook",
			"Sign": "outgoing"
		},
		"isReadable": {
			"Keys": "isReadable__wrappee__Keys",
			"Encrypt": "isReadable"
		},
		"printMail": {
			"Keys": "printMail__wrappee__Keys",
			"Encrypt": "printMail__wrappee__Addressbook",
			"Addressbook": "printMail__wrappee__Addressbook",
			"Sign": "printMail__wrappee__Forward",
			"Forward": "printMail__wrappee__Forward",
			"Verify": "printMail"
		},
		"verify": {
			"Verify": "verify"
		},
		"getBonusPoints": {
			"BonusPoints": "getBonusPoints"
		},
		"validStudent": {
			"BonusPoints": "validStudent__wrappee__BonusPoints",
			"BackOut": "validStudent"
		},
		"insert": {
			"HashSet": "insert"
		},
		"isMember": {
			"HashSet": "isMember"
		},
		"remove": {
			"HashSet": "remove"
		},
		"chargeAndRecord": {
			"Logging": "chargeAndRecord"
		},
		"charge": {
			"MaximumRecord": "charge__wrappee__MaximumRecord",
			"LockOut": "charge"
		},
		"isValid": {
			"LockOut": "isValid"
		},
		"connected": {
			"QuickFind": "connected"
		},
		"union": {
			"QuickFind": "union"
		},
		"main": {
			"Snoc": "main__wrappee__Snoc",
			"Stack": "main"
		},
		"push": {
			"Stack": "push__wrappee__Stack",
			"Sorted": "push",
			"Base": "push__wrappee__Base",
			"Cons": "push__wrappee__Stack"
		},
		"mul": {
			"Complex": "mul"
		},
		"magnitude": {
			"Complex": "magnitude"
		},
		"add": {
			"Complex": "add"
		},
		"sub": {
			"Complex": "sub"
		},
		"div": {
			"Complex": "div"
		},
		"equals": {
			"Complex": "equals"
		},
		"hashCode": {
			"Complex": "hashCode"
		},
		"run": {
			"TestProg": "run__wrappee__TestProg",
			"Number": "run__wrappee__Number",
			"Connected": "run__wrappee__Connected",
			"Cycle": "run__wrappee__Cycle",
			"MSTKruskal": "run"
		},
		"display": {
			"TestProg": "display__wrappee__TestProg",
			"Number": "display__wrappee__Number",
			"BFS": "display__wrappee__TestProg",
			"WeightedOnlyVertices": "display__wrappee__TestProg",
			"Connected": "display__wrappee__Connected",
			"Cycle": "display__wrappee__Cycle",
			"MSTKruskal": "display__wrappee__MSTKruskal",
			"DFS": "display__wrappee__DFS",
			"WeightedWithEdges": "display"
		},
		"VertexConstructor": {
			"Number": "VertexConstructor__wrappee__Number",
			"BFS": "VertexConstructor__wrappee__MSTKruskal",
			"WeightedOnlyVertices": "VertexConstructor__wrappee__Number",
			"MSTKruskal": "VertexConstructor__wrappee__MSTKruskal",
			"DFS": "VertexConstructor"
		},
		"addAnEdge": {
			"WeightedOnlyVertices": "addAnEdge"
		},
		"adjustAdorns": {
			"BFS": "adjustAdorns__wrappee__BFS",
			"WeightedOnlyVertices": "adjustAdorns__wrappee__DFS",
			"DFS": "adjustAdorns__wrappee__DFS",
			"WeightedWithEdges": "adjustAdorns"
		},
		"positiveRemainder": {
			"Complex": "positiveRemainder"
		},
		"setWeight": {
			"WeightedWithEdges": "setWeight"
		},
		"getWeight": {
			"WeightedWithEdges": "getWeight"
		}
	}

}
