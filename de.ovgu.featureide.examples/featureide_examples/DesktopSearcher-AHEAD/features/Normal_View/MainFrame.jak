public refines class MainFrame {

	public void printSearch_SearchPanel(ScoreDoc[] hits, Indexer index,
			String query) {
		searchResultContainer.setLayout(null);
		try {
			if (hits.length == 0) {
				new NoDocument(searchResultContainer, new Point((groupBoxSearch
						.getWidth() / 2) - 50, searchResultContainer
						.getPreferredSize().height));
			} else {

				for (int rankPos = 0; rankPos < hits.length; rankPos++) {
					int documentID = hits[rankPos].doc;
					Object[] ret = index.getDocument(documentID);
					Document document = (Document) ret[0];
					TermFreqVector[] freqVec = (TermFreqVector[]) ret[1];

					String lastModification = document.getField("lastModify")
							.stringValue();
					Timestamp ts = new Timestamp(new Long(lastModification));
					Date d = new Date(ts.getTime());
					lastModification = d.toString();

					String size = document.getField("size").stringValue()
							+ " Byte";

					Point position = new Point(10, searchResultContainer
							.getPreferredSize().height);
					// DatenSatz erzeugen
					ArrayList daten = new ArrayList();
					// rankingPos
					daten.add((1 + rankPos) + "");
					// ID
					daten.add(documentID + "");
					// name
					daten.add(document.getField("title").stringValue());
					// location
					daten.add(document.getField("path").stringValue());
					// groesse
					daten.add(size);
					// age
					daten.add(lastModification);
					// Woerter
					// wenn eine Query vorhanden ist
					if (query != null) {
						String[] queryTerms = index.getQueryTerms(query);
						for (int i = 0; i < queryTerms.length; i++) {
							daten.add(queryTerms[i]);
							daten.add(index.getTermFreq(freqVec, queryTerms[i]) + "");
						}
					}

					// Added das Ergebnis auf das Panel
					HitDocument dokL = new HitDocument(searchResultContainer,
							position, daten);
					/**
					 * In diesem Bereich wird die PrefereceSize des Container an
					 * die beinhaltenden Panel angepasst. Dadurch wird
					 * sichergestellt, dass die Scrollbars wie gewuenscht
					 * funktionieren.
					 */
					if (dokL.getWidth() > searchResultContainer
							.getPreferredSize().width) {
						searchResultContainer
								.setPreferredSize(new Dimension(
										dokL.getWidth(), dokL.getY()
												+ dokL.getHeight()));
					} else
						searchResultContainer.setPreferredSize(new Dimension(
								groupBoxSearch.getSize().width, dokL.getY()
										+ dokL.getHeight()));
				}
				searchResultContainer.repaint();
				scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
				scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
			}
		} catch (Exception e) {
			System.err.println(e);
			e.printStackTrace();
		}

	}

}